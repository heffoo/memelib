{"version":3,"sources":["components/memes/mock-memes.js","components/Sidebar/Sidebar.js","components/memeInfo/memeinfo.js","components/Container/memeList.js","components/Container/container.js","App.js","index.js"],"names":["MEMES_INFO","id","name","url","year","isLiked","info","idLiked","Sidebar","memes","randmeme","setRandMeme","className","exact","to","activeClassName","onClick","randomedMeme","filter","el","Math","floor","random","length","MemeInfo","currentPage","memeid","setFavorite","meme","find","item","index","alt","src","MemeList","map","key","Container","memesfavs","path","component","props","match","params","App","useState","JSON","parse","localStorage","getItem","setMemes","favmemes","setFavMemes","useEffect","fetch","then","response","json","res","fetchedMemes","data","forEach","console","log","catch","err","error","handler","memefavs","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec9f6654.chunk.js","sourcesContent":["const MEMES_INFO = [\n  {\n    id: \"LOL\",\n    name: \"LOL\",\n    url: \"/images/lol.jpg\",\n    year: \"14 июня 2010 года\",\n    isLiked: false,\n    info:\n      \" Начнём с того, что LOL – это англоязычный акроним, означающий Laughing Out Loud (Громко смеяться). Само по себе это слово уже является мемом и возникло в начал 2000-х в среде американских школьников, которые любили сокращать выражения, обмениваясь СМС. В 2011 году LOL занесли в Оксфордский словарь. Фейс LOL Guy впервые появился 14 июня 2010 года на сайте 4chan. Его создатель сам разместил картинку, предугадывая, что она станет мемом. Всего через 4 дня изображение перекочевало на Reddit и обрело дикую популярность. Относится к категории мемов-фейсов из комиксов Rage Comics.\",\n  },\n  {\n    id: \"PF\",\n    name: \"Pokerface\",\n    isLiked: false,\n    year: \"2010\",\n    url: \"/images/PF.jpg\",\n\n    info: \"   Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloribus rerum sunt minima ad fuga aliquam?  \",\n  },\n  {\n    id: \"TF\",\n    name: \"Trollface\",\n    year: \"2008\",\n    info:\n      \"Впервые троллфейс появился 19 сентября 2008 года на сервисе Deviantart в комиксе пользователя Whynne. Лицо с этого комикса мгновенно разлетелось по имиджбордам, начало набирать популярность и в конце концов достигло статуса мема.\",\n    isLiked: false,\n    url: \"/images/Trollface.png\",\n  },\n  {\n    id: \"OK\",\n    name: \"Okay..\",\n    year: \"24 августа 2010 года\",\n    info:\n      \"Персонаж, который c бесконечно горькой миной всегда говорит «окей» даже в тех случаях, когда большинство rage-парней не согласилось бы или даже проявило негативную реакцию. Впервые появился на Reddit 24 августа 2010 года.\",\n    isLiked: false,\n    url: \"/images/okay.jpg\",\n  },\n  {\n    id: \"MG\",\n    name: \"Me gusta\",\n    year: \"18 марта 2010 года\",\n    isLiked: false,\n    info:\n      \"Первый комикс был размещён на сайте Реддит 18 марта 2010 года. Автор Me Gusta — пользователь одного хорошего сайта художников «Девиант Арт» под ником Insert31990. Сам же мем возник примерно в ноябре 2010. Позже мем распространился, как всегда, на Форчане и завоевал Интернет.\",\n    url: \"/images/megusta.png\",\n  },\n  {\n    id: \"FA\",\n    name: \"Forever Alone\",\n    isLiked: false,\n    year: \"2010\",\n    url: \"/images/fa.png\",\n    info:\n      \"Forever Alone (Вечно Одинокий) — депрессивный и одинокий персонаж без друзей и каких-либо перспектив в жизни. Его можно встретить в любой ситуации, где человек чувствует себя всеми покинутым или же ему просто очень грустно. Это очень популярный фейс, который стал мемом и который с огромной скоростью распространяется по Интернету. Комиксы с Forever Alone захватывают соцсети и умы одиноких школьников и студентов, которые никогда не перестанут быть одинокими. Особенно Forever Alone активизируется на 14 февраля («день святого Валентина» или «день влюбленных»). Сия физиономия впервые появилась в одном из Rage comics’ов, где главного персонажа ужалила оса прямо в лицо, вследствие чего оно распухло. Однако очевидцы утвержают, что перед появлением на Форчане Форевер Алон частенько мелькал на Funny Junk примерно с конца июня 2010 года.\",\n  },\n  {\n    id: \"EW\",\n    name: \"Epic Win\",\n    idLiked: false,\n    year: \"\",\n    info: \"Интернет умалчивает об истории данного мема\",\n    url: \"/images/ew.jpg\",\n  },\n];\nexport default MEMES_INFO;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport \"./Sidebar.scss\";\n\nconst Sidebar = ({ memes, randmeme, setRandMeme }) => {\n  function randMeme() {\n    let randomedMeme;\n    if (randmeme) {\n      randomedMeme = memes.filter((el) => el.id !== randomedMeme.id)[Math.floor(Math.random() * memes.length - 1) + 1];\n    } else {\n      randomedMeme = memes[Math.floor(Math.random() * memes.length) + 1];\n    }\n\n    setRandMeme(randomedMeme);\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidelist\">\n        <button className=\"sidebtn\">\n          <NavLink className=\"navlink\" exact to=\"/\" activeClassName=\"active\">\n            all memes\n          </NavLink>\n        </button>\n        <button className=\"sidebtn\">\n          <NavLink className=\"navlink\" to=\"/favmemes\" activeClassName=\"active\">\n            favorite memes\n          </NavLink>\n        </button>\n\n        <button className=\"sidebtn\" onClick={randMeme}>\n          <Link className=\"navlink\" to={`/${randmeme ? randmeme.id : \"LOL\"}`}>\n            gen a random meme\n          </Link>\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Sidebar;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./memeinfo.scss\";\n\nexport default function MemeInfo({ memeid, memes, setFavorite }) {\n  let currentPage;\n  const meme = memes.find((item, index) => {\n    if (item.id === memeid) {\n      currentPage = index;\n\n      return true;\n    }\n\n  });\n\n  return (\n    <div className=\"memeinfo\">\n      <div className=\"show-meme-inormation\">\n        <div className=\"textInfo\">\n          <button className=\"liked\" onClick={() => setFavorite(meme)}>\n            <img className=\"notLiked\" alt=\"like\" src={!meme.isLiked ? \"images/star.png\" : \"images/starliked.png\"} />\n          </button>\n          <p>Название мема: {meme.name} </p> <br />\n          <p>Год появления: {meme.year} </p> <br />\n          <p>Биография: {meme.info} </p>\n          <br />\n        </div>\n        <img src={meme.url} alt=\"img \" className=\"img-info\" />{\" \"}\n        <Link className=\"arrow1\" to={`/${currentPage === 0 ? memes[memes.length - 1].id : memes[currentPage - 1].id}`}>\n          ←\n        </Link>\n        <Link className=\"arrow2\" to={`/${currentPage === memes.length - 1 ? memes[0].id : memes[currentPage + 1].id}`}>\n          →\n        </Link>\n      </div>\n    </div>\n  );\n}\n\n/* <button className=\"liked\" onClick={() => {meme.isLiked = !meme.isLiked}}>{!meme.isLiked ? <img className=\"notLiked\" alt=\"like\" src=\"images/star.png\"/> : <img className=\"notLiked\" alt=\"like\" src=\"images/starliked.png\"/>}</button> */\n","import React from \"react\";\n\n// import MemeInfo from \"../memeInfo/memeinfo\";\nimport { Link } from \"react-router-dom\";\nimport \"./container.scss\";\n\nexport default function MemeList({ memes }) {\n  return (\n    <div className=\"list\">\n      {memes.map((meme) => (\n          <li key={meme.id} className=\"meme-item\">\n            <Link className=\"tomeme-link\" to={`/${meme.id}`}>\n              <img className=\"memeimg\" src={meme.url} alt={meme.name}></img>\n              <p >{meme.name}</p>\n            </Link>\n          </li>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport MemeInfo from \"../memeInfo/memeinfo\";\nimport MemeList from \"../Container/memeList\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport \"./container.scss\";\n\nconst Container = ({ memes, setFavorite, memesfavs }) => {\n  //   const [isLike, setLike] = useState(false);\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\"></div>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <MemeList memes={memes} />\n        </Route>\n        <Route exact path=\"/favmemes\">\n          <MemeList memes={memesfavs} />\n        </Route>\n        <Route\n          path=\"/:memeid\"\n          component={(props) => {\n            return <MemeInfo memeid={props.match.params.memeid} memes={memes} setFavorite={setFavorite} />;\n          }}\n        ></Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useState, useEffect } from \"react\";\nimport MEMES_INFO from \"./components/memes/mock-memes\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Container from \"./components/Container/container\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const [memes, setMemes] = useState(JSON.parse(localStorage.getItem(\"data\")) || []);\n  const [favmemes, setFavMemes] = useState(\n    (JSON.parse(localStorage.getItem(\"data\"))).filter((item) => item.isLiked)\n  );\n  const [randmeme, setRandMeme] = useState(null);\n\n  const setFavorite = (meme) => {\n    const handler = memes.map((item) => {\n      if (item.id === meme.id) {\n        item = { ...item, isLiked: !item.isLiked };\n      }\n      return item;\n    });\n    const memefavs = handler.filter((item) => item.isLiked);\n\n    setMemes(handler);\n    setFavMemes(memefavs);\n    localStorage.setItem(\"data\", JSON.stringify(handler));\n  };\n  useEffect(() => {\n    getMemes();\n  }, []);\n\n  function getMemes() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json())\n      .then((res) => {\n        const fetchedMemes = res.data.memes.map((el) => (el = { ...el, isLiked: false }));\n        // let item =res.data.memes.find((item)=>item.id==='1')\n        // item.\n        fetchedMemes.forEach((el) => console.log(el.url));\n        if (!memes.length) {\n          setMemes([...fetchedMemes,...MEMES_INFO]);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"forms-position\">\n        <Sidebar memes={memes} randmeme={randmeme} setRandMeme={setRandMeme} />\n        <Container memesfavs={favmemes} memes={memes} setFavorite={setFavorite} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}